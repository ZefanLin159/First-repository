<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newcorder.community.dao.MessageMapper">
    <sql id="selectField">
        id
        ,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="insertField">
        from_id
        ,to_id,conversation_id,content,status,create_time
    </sql>

    <select id="selectConversation" resultType="Message">
        -- 查询列表中那个未读的消息
        select
        <include refid="selectField"></include>
        from message
        where id in (
        -- 查询最后的那条信息，以conversation_id分组,userId(发信人或者收信人）
        select max(id)
        from message
        where status != 2
        and from_id != 1
        and (from_id = #{userId}
        or to_id = #{userId})
        group by conversation_id
        )
        order by `id`
        desc
        limit #{offset},#{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        select count(m.maxid) -- 从子查询中分组后搜得的id查询最大的id
        from (
                 select max(id) as maxid
                 from message
                 where status != 2
                    and from_id != 1
                    and (from_id = #{userId}
                    or to_id = #{userId})
                 group by conversation_id
             ) as m -- 子查询作为别名m
    </select>

    <select id="selectLetter" resultType="Message">
        select
        <include refid="selectField"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset} , #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        -- 别人发给我的消息
        select count(id) from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message
        (<include refid="insertField"></include>)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
    <update id="updateStatus">
        -- 拼接所有的id,切记不能加
        update message
        set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectLatestNotice" resultType="Message">
        select
        <include refid="insertField"/>
        from message
        where id in(
        select max(id) from message
        where status!=2 and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        )
    </select>

    <select id="selectNoticeCount" resultType="int">
        select count(id)
        from message
        where status!=2
          and from_id = 1
          and to_id = #{userId}
          and conversation_id = #{topic}
    </select>

    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>

    </select>

    <select id="selectNotices" resultType="Message">
        select
        <include refid="insertField"/>
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset},#{limit}
    </select>
</mapper>